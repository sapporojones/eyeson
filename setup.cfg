# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = eyeson
description = Retrieve at a glance info for a given solar system in EVE Online
author = sapporojones
author_email = sapporojones@gmail.com
license = MIT
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/sapporojones/eyeson
# Add here related links, for example:
project_urls =
    Documentation = https://github.com/sapporojones/eyeson
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
setup_requires =
  setuptools_scm

# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
#    importlib-metadata; python_version<"3.8"
    appdirs==1.4.4
    arrow==0.17.0
    atomicwrites==1.4.0
    attrs==20.3.0
    binaryornot==0.4.4
    black==20.8b1
    CacheControl==0.12.6
    cachy==0.3.0
    certifi==2021.5.30
    cfgv==3.2.0
    chardet==4.0.0
    cleo==0.8.1
    click==7.1.2
    clikit==0.6.2
    codecov==2.1.11
    colorama==0.4.4
    commonmark==0.9.1
    ConfigUpdater==2.0
    cookiecutter==1.7.2
    coverage==5.5
    crashtest==0.3.1
    darglint==1.8.0
    distlib==0.3.2
    filelock==3.0.12
    flake8==3.8.4
    gitchangelog==3.0.4
    html5lib==1.1
    identify==2.4.11
    idna==2.10
    iniconfig==1.1.1
    Jinja2==2.11.3
    jinja2-time==0.2.0
    keyring==21.8.0
    lice==0.6
    lockfile==0.12.2
    MarkupSafe==1.1.1
    mccabe==0.6.1
    msgpack==1.0.2
    mypy-extensions==0.4.3
    nodeenv==1.6.0
    numpy==1.20.3
    packaging==20.8
    pandas==1.2.4
    pastel==0.2.1
    pathspec==0.8.1
    pexpect==4.8.0
    pkginfo==1.7.0
    pluggy==0.13.1
    poetry==1.1.7
    poetry-core==1.0.3
    poyo==0.5.0
    pre-commit==2.13.0
    ptyprocess==0.7.0
    py==1.10.0
    pycairo==1.20.1
    pycodestyle==2.6.0
    pyflakes==2.2.0
    Pygments==2.9.0
    pylev==1.3.0
    pyparsing==2.4.7
    PyScaffold==4.0.2
    pytest==6.2.4
    pytest-cov==2.12.1
    python-dateutil==2.8.1
    python-slugify==4.0.1
    pytz==2021.1
    pyupgrade==2.19.1
    pywin32-ctypes==0.2.0
    PyYAML==5.4.1
    regex==2020.11.13
    requests==2.25.1
    requests-toolbelt==0.9.1
    rich==10.4.0
    setuptools-scm==6.0.1
    shellingham==1.3.2
    six==1.15.0
    text-unidecode==1.3
    tokenize-rt==4.1.0
    toml==0.10.2
    tomlkit==0.7.0
    tox==3.23.1
    typed-ast==1.4.2
    typer==0.3.2
    typing-extensions==3.7.4.3
    urllib3==1.26.6
    virtualenv==20.4.0
    webencodings==0.5.1






[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install eyeson[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
; console_scripts =
;     main = eyeson.__main__:main
# For example:
# console_scripts =
#     fibonacci = eyeson.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
addopts =
;    --cov eyeson --cov-report term-missing
    --cov . --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.2
package = eyeson
extensions =
    pre_commit
